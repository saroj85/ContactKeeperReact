{"ast":null,"code":"import _slicedToArray from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\contactKeeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, ADD_CONTACT } from '../type';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: \"saroj kumar\",\n      email: \"send4saroij@gmail.com\",\n      phone: \"1234567890\",\n      type: \"personal\"\n    }, {\n      id: 2,\n      name: \"Sandeep kumar\",\n      email: \"sandeep@gmail.com\",\n      phone: \"4356789876\",\n      type: \"personal\"\n    }, {\n      id: 3,\n      name: \"Raju kumar\",\n      email: \"raju4@gmail.com\",\n      phone: \"081380674787\",\n      type: \"Professional\"\n    }],\n    current: null,\n    filterdContact: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // ADD CONTACTS\n\n\n  const addContact = contact => {\n    contact.id = uuid.v4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // DELETE_CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // SET CURRENT CONTACT \n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // CLEAR CURRENT CONTACT \n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // UPDATE CONTACT \n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // FILTER CONTACT \n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // CLEAR FILTER \n\n\n  const clearFilter = text => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","ContactContext","ContactReducer","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ADD_CONTACT","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filterdContact","state","dispatch","addContact","contact","v4","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\n\r\nimport {\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n    ADD_CONTACT\r\n} from '../type';\r\n\r\n\r\n\r\n\r\n\r\nconst ContactState = (props) => {\r\n    const initialState = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name: \"saroj kumar\",\r\n                email: \"send4saroij@gmail.com\",\r\n                phone: \"1234567890\",\r\n                type: \"personal\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"Sandeep kumar\",\r\n                email: \"sandeep@gmail.com\",\r\n                phone: \"4356789876\",\r\n                type: \"personal\"\r\n            },\r\n            {\r\n                id: 3,\r\n                name: \"Raju kumar\",\r\n                email: \"raju4@gmail.com\",\r\n                phone: \"081380674787\",\r\n                type: \"Professional\"\r\n            },\r\n        ],\r\n        current: null,\r\n        filterdContact: null,\r\n    };\r\n\r\n\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n\r\n    // ADD CONTACTS\r\n\r\n    const addContact = contact => {\r\n        contact.id = uuid.v4();\r\n        dispatch({ type: ADD_CONTACT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // DELETE_CONTACT\r\n\r\n    const deleteContact = id => {\r\n        dispatch({ type: DELETE_CONTACT, payload: id })\r\n    }\r\n\r\n\r\n    // SET CURRENT CONTACT \r\n    \r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // CLEAR CURRENT CONTACT \r\n    \r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT })\r\n    }\r\n\r\n\r\n\r\n    // UPDATE CONTACT \r\n\r\n    const updateContact = contact => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // FILTER CONTACT \r\n\r\n    const filterContact = text => {\r\n        dispatch({type: FILTER_CONTACTS, payload: text})\r\n    }\r\n\r\n\r\n    // CLEAR FILTER \r\n\r\n\r\n    const clearFilter = text => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContact,\r\n                clearFilter,\r\n              \r\n            }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    ) \r\n};\r\n\r\n\r\n\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}