{"ast":null,"code":"import React,{useRef,useEffect,useState,useContext}from'react';import ContactContaxt from'../../context/contact/contactContext';var Search=function Search(){var contactContext=useContext(ContactContaxt);var text=useRef(\"\");var filterContact=contactContext.filterContact,clearFilter=contactContext.clearFilter,filterd=contactContext.filterd;useEffect(function(){if(filterd===null)text.current.value=\"\";},[filterd]);var onchange=function onchange(e){if(text.current.value!==\"\")filterContact(e.target.value);else clearFilter();};return React.createElement(\"input\",{type:\"text\",ref:text,onChange:onchange,className:\"input\",placeholder:\"Filter contect\"});};export default Search;","map":{"version":3,"sources":["/media/saroj/New Volume1/work/client/src/component/Search/Search.js"],"names":["React","useRef","useEffect","useState","useContext","ContactContaxt","Search","contactContext","text","filterContact","clearFilter","filterd","current","value","onchange","e","target"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,CAA6CC,UAA7C,KAA+D,OAA/D,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMC,CAAAA,cAAc,CAAGH,UAAU,CAACC,cAAD,CAAjC,CACA,GAAMG,CAAAA,IAAI,CAAGP,MAAM,CAAC,EAAD,CAAnB,CAFiB,GAGTQ,CAAAA,aAHS,CAG+BF,cAH/B,CAGTE,aAHS,CAGMC,WAHN,CAG+BH,cAH/B,CAGMG,WAHN,CAGmBC,OAHnB,CAG+BJ,cAH/B,CAGmBI,OAHnB,CAIjBT,SAAS,CAAC,UAAM,CAAE,GAAIS,OAAO,GAAK,IAAhB,CAAsBH,IAAI,CAACI,OAAL,CAAaC,KAAb,CAAqB,EAArB,CAA0B,CAAzD,CAA2D,CAACF,OAAD,CAA3D,CAAT,CAEA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClB,GAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+BJ,aAAa,CAACM,CAAC,CAACC,MAAF,CAASH,KAAV,CAAb,CAA/B,IACKH,CAAAA,WAAW,GACnB,CAHD,CAKA,MACI,8BAAO,IAAI,CAAC,MAAZ,CAAmB,GAAG,CAAEF,IAAxB,CAA8B,QAAQ,CAAEM,QAAxC,CAAkD,SAAS,CAAC,OAA5D,CAAoE,WAAW,CAAC,gBAAhF,EADJ,CAGH,CAdD,CAeA,cAAeR,CAAAA,MAAf","sourcesContent":["import React, { useRef, useEffect, useState, useContext } from 'react';\r\nimport ContactContaxt from '../../context/contact/contactContext';\r\n\r\nconst Search = () => {\r\n    const contactContext = useContext(ContactContaxt);\r\n    const text = useRef(\"\");\r\n    const { filterContact, clearFilter, filterd } = contactContext;\r\n    useEffect(() => { if (filterd === null) text.current.value = \"\"; }, [filterd])\r\n\r\n    const onchange = e => {\r\n        if (text.current.value !== \"\") filterContact(e.target.value);\r\n        else clearFilter()\r\n    }\r\n\r\n    return (\r\n        <input type=\"text\" ref={text} onChange={onchange} className=\"input\" placeholder=\"Filter contect\" />\r\n    )\r\n}\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}