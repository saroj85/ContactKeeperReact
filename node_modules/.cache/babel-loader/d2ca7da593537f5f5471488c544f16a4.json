{"ast":null,"code":"import _slicedToArray from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\contactKeeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport axois from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, ADD_CONTACT } from '../type';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filterd: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // ADD CONTACTS\n\n\n  const addContact = async contact => {\n    // contact.id = uuid.v4();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // DELETE_CONTACT\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // SET CURRENT CONTACT \n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // CLEAR CURRENT CONTACT \n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // UPDATE CONTACT \n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // FILTER CONTACT \n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // CLEAR FILTER \n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      filterd: state.filterd,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","uuid","axois","ContactContext","ContactReducer","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ADD_CONTACT","ContactState","props","initialState","contacts","current","filterd","state","dispatch","addContact","contact","config","headers","type","payload","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContact","text","clearFilter","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SACIC,cADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,eALJ,EAMIC,YANJ,EAOIC,SAPJ,EAQIC,YARJ,EASIC,WATJ,QAUO,SAVP;;AAgBA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,OAAO,EAAE;AAHQ,GAArB;;AAD4B,sBAQFnB,UAAU,CAACI,cAAD,EAAiBY,YAAjB,CARR;AAAA;AAAA,QAQrBI,KARqB;AAAA,QAQdC,QARc,oBAW5B;;;AAEA,QAAMC,UAAU,GAAG,MAAMC,OAAN,IAAiB;AAChC;AACA,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAG;AACN,wBAAgB;AADV;AADC,KAAf;AAMAJ,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEb,WAAR;AAAqBc,MAAAA,OAAO,EAAEJ;AAA9B,KAAD,CAAR;AACH,GATD,CAb4B,CA0B5B;;;AAEA,QAAMK,aAAa,GAAGC,EAAE,IAAI;AACxBR,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAErB,cAAR;AAAwBsB,MAAAA,OAAO,EAAEE;AAAjC,KAAD,CAAR;AACH,GAFD,CA5B4B,CAiC5B;;;AAEA,QAAMC,UAAU,GAAGP,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEpB,WAAR;AAAqBqB,MAAAA,OAAO,EAAEJ;AAA9B,KAAD,CAAR;AACH,GAFD,CAnC4B,CAyC5B;;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACvBV,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEnB;AAAR,KAAD,CAAR;AACH,GAFD,CA3C4B,CAiD5B;;;AAEA,QAAMyB,aAAa,GAAGT,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAElB,cAAR;AAAwBmB,MAAAA,OAAO,EAAEJ;AAAjC,KAAD,CAAR;AACH,GAFD,CAnD4B,CAyD5B;;;AAEA,QAAMU,aAAa,GAAGC,IAAI,IAAI;AAC1Bb,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAEjB,eAAP;AAAwBkB,MAAAA,OAAO,EAAEO;AAAjC,KAAD,CAAR;AACH,GAFD,CA3D4B,CAgE5B;;;AAGA,QAAMC,WAAW,GAAG,MAAM;AACtBd,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACH,GAFD;;AAMA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHO,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADb;AAEHE,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAFZ;AAGHD,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHZ;AAIHI,MAAAA,UAJG;AAKHM,MAAAA,aALG;AAMHE,MAAAA,UANG;AAOHC,MAAAA,YAPG;AAQHC,MAAAA,aARG;AASHC,MAAAA,aATG;AAUHE,MAAAA;AAVG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcKpB,KAAK,CAACqB,QAdX,CADJ;AAkBH,CA3FD;;AAgGA,eAAetB,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport uuid from 'uuid';\r\nimport axois from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\n\r\nimport {\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n    ADD_CONTACT\r\n} from '../type';\r\n\r\n\r\n\r\n\r\n\r\nconst ContactState = (props) => {\r\n    const initialState = {\r\n        contacts: [],\r\n        current: null,\r\n        filterd: null,\r\n    };\r\n\r\n\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n\r\n\r\n    // ADD CONTACTS\r\n\r\n    const addContact = async contact => {\r\n        // contact.id = uuid.v4();\r\n        const config = {\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            \r\n        }\r\n        dispatch({ type: ADD_CONTACT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // DELETE_CONTACT\r\n\r\n    const deleteContact = id => {\r\n        dispatch({ type: DELETE_CONTACT, payload: id })\r\n    }\r\n\r\n\r\n    // SET CURRENT CONTACT \r\n    \r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // CLEAR CURRENT CONTACT \r\n    \r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT })\r\n    }\r\n\r\n\r\n\r\n    // UPDATE CONTACT \r\n\r\n    const updateContact = contact => {\r\n        dispatch({ type: UPDATE_CONTACT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // FILTER CONTACT \r\n\r\n    const filterContact = text => {\r\n        dispatch({type: FILTER_CONTACTS, payload: text})\r\n    }\r\n\r\n\r\n    // CLEAR FILTER \r\n\r\n\r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                filterd: state.filterd,\r\n                current: state.current,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContact,\r\n                clearFilter,\r\n              \r\n            }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    ) \r\n};\r\n\r\n\r\n\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}