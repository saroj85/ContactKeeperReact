{"ast":null,"code":"import _slicedToArray from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\contactKeeper\\\\client\\\\src\\\\context\\\\alert\\\\alertState.js\";\nimport React, { useReducer } from 'react';\nimport AlertContext from './alertContext';\nimport AlertReducer from './alertReducer';\nimport uuid from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from '../type';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // set alert \n\n\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    }); // setTimeout(() => dispatch({ type: SET_ALERT, payload: { msg, type, id } }), timeout);\n  }; // remove alert \n\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/context/alert/alertState.js"],"names":["React","useReducer","AlertContext","AlertReducer","uuid","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","v4","payload","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACIC,SADJ,EAEIC,YAFJ,QAGO,SAHP;;AAKA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAMC,YAAY,GAAG,EAArB;;AAD0B,sBAEAR,UAAU,CAACE,YAAD,EAAeM,YAAf,CAFV;AAAA;AAAA,QAEnBC,KAFmB;AAAA,QAEZC,QAFY,oBAI1B;;;AACA,QAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC5C,UAAMC,EAAE,GAAGZ,IAAI,CAACa,EAAL,EAAX;AACAN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAET,SADD;AAELa,MAAAA,OAAO,EAAE;AAAEL,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaE,QAAAA;AAAb;AAFJ,KAAD,CAAR,CAF4C,CAM5C;AACH,GAPD,CAL0B,CAc1B;;;AAGA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHG,MAAAA,MAAM,EAAET,KADL;AAEHE,MAAAA;AAFG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKJ,KAAK,CAACY,QALX,CADJ;AASH,CA1BD;;AA6BA,eAAeb,UAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport uuid from 'uuid';\r\nimport {\r\n    SET_ALERT,\r\n    REMOVE_ALERT\r\n} from '../type';\r\n\r\nconst AlertState = (props) => {\r\n    const initialState = [];\r\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n    // set alert \r\n    const setAlert = (msg, type, timeout = 5000) => {\r\n        const id = uuid.v4();\r\n        dispatch({\r\n            type: SET_ALERT,\r\n            payload: { msg, type, id }\r\n        });\r\n        // setTimeout(() => dispatch({ type: SET_ALERT, payload: { msg, type, id } }), timeout);\r\n    }\r\n\r\n    // remove alert \r\n    \r\n\r\n    return (\r\n        <AlertContext.Provider\r\n            value={{\r\n                alerts: state,\r\n                setAlert\r\n            }}>\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}