{"ast":null,"code":"import _objectSpread from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, ADD_CONTACT, CONTACTS_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../type';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\n        loading: false\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filterd: state.contacts.filter(contact => {\n          const Regx = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(Regx) || contact.email.match(Regx);\n        }),\n        loading: false\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filterd: null,\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case CONTACTS_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/context/contact/contactReducer.js"],"names":["DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ADD_CONTACT","CONTACTS_ERROR","GET_CONTACTS","CLEAR_CONTACTS","state","action","type","contacts","payload","loading","map","contact","id","filterd","filter","Regx","RegExp","name","match","email","current","error"],"mappings":";AACA,SACIA,cADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,eALJ,EAMIC,YANJ,EAOIC,SAPJ,EAQIC,YARJ,EASIC,WATJ,EAUIC,cAVJ,EAWIC,YAXJ,EAYIC,cAZJ,QAaO,SAbP;AAiBA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAL;AACI,+BACOI,KADP;AAEIG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFd;;AAIJ,SAAKN,YAAL;AACA,+BACOE,KADP;AAEIG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFrB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAMA,SAAKd,cAAL;AACI,+BACOS,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAP,CAAeI,EAA9B,GAAmCP,MAAM,CAACG,OAA1C,GAAoDG,OAAlF,CAFd;AAGIF,QAAAA,OAAO,EAAE;AAHb;;AAOJ,SAAKb,eAAL;AACI,+BACOQ,KADP;AAEIS,QAAAA,OAAO,EAAET,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsBH,OAAO,IAAI;AACtC,gBAAMI,IAAI,GAAG,IAAIC,MAAJ,CAAY,GAAEX,MAAM,CAACG,OAAQ,EAA7B,EAAgC,IAAhC,CAAb;AACA,iBAAOG,OAAO,CAACM,IAAR,CAAaC,KAAb,CAAmBH,IAAnB,KAA4BJ,OAAO,CAACQ,KAAR,CAAcD,KAAd,CAAoBH,IAApB,CAAnC;AACH,SAHQ,CAFb;AAMIN,QAAAA,OAAO,EAAE;AANb;;AAUJ,SAAKZ,YAAL;AACI,+BACOO,KADP;AAEIS,QAAAA,OAAO,EAAE,IAFb;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAOJ,SAAKjB,cAAL;AACI,+BACOY,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeO,MAAf,CAAsBH,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACG,OAAvD,CAFd;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAOJ,SAAKhB,WAAL;AACI,+BACOW,KADP;AAEIgB,QAAAA,OAAO,EAAEf,MAAM,CAACG;AAFpB;;AAKJ,SAAKd,aAAL;AACI,+BACOU,KADP;AAEIgB,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKnB,cAAL;AACI,+BACOG,KADP;AAEIiB,QAAAA,KAAK,EAAEhB,MAAM,CAACG,OAFlB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAMJ;AACI,aAAOL,KAAP;AAnER;AAqEH,CAtED","sourcesContent":["\r\nimport {\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT, \r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n    ADD_CONTACT,\r\n    CONTACTS_ERROR,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../type';\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n        case GET_CONTACTS: \r\n        return {\r\n            ...state,\r\n            contacts: action.payload,\r\n            loading: false,\r\n\r\n        }\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact),\r\n                loading: false,\r\n\r\n            }\r\n\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filterd: state.contacts.filter(contact => {\r\n                    const Regx = new RegExp(`${action.payload}`, 'gi');\r\n                    return contact.name.match(Regx) || contact.email.match(Regx)\r\n                }),\r\n                loading: false,\r\n\r\n            }\r\n\r\n        case CLEAR_FILTER:\r\n            return{\r\n                ...state,\r\n                filterd: null,\r\n                loading: false,\r\n\r\n            }\r\n\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload),\r\n                loading: false,\r\n                \r\n            }\r\n\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n\r\n        case CLEAR_CURRENT:\r\n            return{\r\n                ...state,\r\n                current: null\r\n            }\r\n        case CONTACTS_ERROR:\r\n            return{\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false,\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}