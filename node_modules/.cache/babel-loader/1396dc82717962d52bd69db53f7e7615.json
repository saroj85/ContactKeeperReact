{"ast":null,"code":"import _objectSpread from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, ADD_CONTACT } from '../type';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filterd: state.contacts.filter\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/context/contact/contactReducer.js"],"names":["DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ADD_CONTACT","state","action","type","contacts","payload","map","contact","id","filterd","filter","current"],"mappings":";AACA,SACIA,cADJ,EAEIC,WAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,eALJ,EAMIC,YANJ,EAOIC,SAPJ,EAQIC,YARJ,EASIC,WATJ,QAUO,SAVP;AAcA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKH,WAAL;AACI,+BACOC,KADP;AAEIG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;AAFd;;AAIJ,SAAKV,cAAL;AACI,+BACOM,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAP,CAAeG,EAA9B,GAAmCN,MAAM,CAACG,OAA1C,GAAoDE,OAAlF;AAFd;;AAIJ,SAAKV,YAAL;AACI,+BACOI,KADP;AAEIQ,QAAAA,OAAO,EAAER,KAAK,CAACG,QAAN,CAAeM;AAF5B;;AAIJ,SAAKlB,cAAL;AACI,+BACOS,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsBH,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAAvD;AAFd;;AAIJ,SAAKZ,WAAL;AACI,+BACOQ,KADP;AAEIU,QAAAA,OAAO,EAAET,MAAM,CAACG;AAFpB;;AAIJ,SAAKX,aAAL;AACI,+BACOO,KADP;AAEIU,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOV,KAAP;AAhCR;AAkCH,CAnCD","sourcesContent":["\r\nimport {\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT, \r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n    ADD_CONTACT\r\n} from '../type';\r\n\r\n\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? action.payload : contact)\r\n            }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filterd: state.contacts.filter\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return{\r\n                ...state,\r\n                current: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}