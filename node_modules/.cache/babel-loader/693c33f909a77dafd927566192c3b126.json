{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\work\\\\contactKeeper\\\\client\\\\src\\\\component\\\\routing\\\\private.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  const context = useContext(AuthContext);\n  const isAuthenticated = context.isAuthenticated,\n        loading = context.loading;\n  console.log(\"isAuthenticated\", isAuthenticated);\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoute; // import React, {useContext} from 'react';\n// import { Route, Redirect } from 'react-router-dom';\n// import AuthContext  from '../../context/auth/authContext'\n// const PrivateRoute = ({component: Component, ...rest}) => {\n//     const authContext = useContext(AuthContext);\n//     const {isAuthenticated, loading} = authContext;\n//     return (\n//         <Route {...rest} render={props => (\n//             isAuthenticated ?\n//                 <Component {...props} />\n//             : <Redirect to=\"/\" />\n//         )} />\n//     );\n// };\n// export default PrivateRoute;","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/component/routing/private.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","Component","component","rest","context","isAuthenticated","loading","console","log","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAGA,MAAMC,YAAY,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACxD,QAAMC,OAAO,GAAGR,UAAU,CAACG,WAAD,CAA1B;AADwD,QAEhDM,eAFgD,GAEnBD,OAFmB,CAEhDC,eAFgD;AAAA,QAE/BC,OAF+B,GAEnBF,OAFmB,CAE/BE,OAF+B;AAIxDC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,eAA/B;AAEA,SACI,oBAAC,KAAD,oBAAWF,IAAX;AAAiB,IAAA,MAAM,EAAEM,KAAK,IAC1BJ,eAAe,GAAG,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,GAEX,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH,CAdD;;AAiBA,eAAeT,YAAf,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport AuthContext from '../../context/auth/authContext'\r\n\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const context = useContext(AuthContext)\r\n    const { isAuthenticated, loading } = context;\r\n    \r\n    console.log(\"isAuthenticated\", isAuthenticated)\r\n\r\n    return (\r\n        <Route {...rest} render={props =>\r\n            isAuthenticated ? <Component {...props} />\r\n                :\r\n                <Redirect to=\"/login\" />\r\n\r\n        } />\r\n    )\r\n}\r\n\r\n\r\nexport default PrivateRoute;\r\n\r\n// import React, {useContext} from 'react';\r\n// import { Route, Redirect } from 'react-router-dom';\r\n// import AuthContext  from '../../context/auth/authContext'\r\n\r\n// const PrivateRoute = ({component: Component, ...rest}) => {\r\n\r\n//     const authContext = useContext(AuthContext);\r\n//     const {isAuthenticated, loading} = authContext;\r\n\r\n//     return (\r\n//         <Route {...rest} render={props => (\r\n//             isAuthenticated ?\r\n//                 <Component {...props} />\r\n//             : <Redirect to=\"/\" />\r\n//         )} />\r\n//     );\r\n// };\r\n\r\n// export default PrivateRoute;"]},"metadata":{},"sourceType":"module"}