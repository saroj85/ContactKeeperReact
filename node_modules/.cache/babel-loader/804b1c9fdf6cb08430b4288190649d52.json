{"ast":null,"code":"import _objectSpread from \"D:\\\\work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\client\\\\src\\\\component\\\\auth\\\\Register.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = props => {\n  const alertContext = useContext(AlertContext);\n  const authContext = useContext(AuthContext);\n  const registerUser = authContext.registerUser,\n        error = authContext.error,\n        clearError = authContext.clearError,\n        sendOtpVerify = authContext.sendOtpVerify;\n\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        otp = _useState4[0],\n        setotp = _useState4[1];\n\n  const name = user.name,\n        email = user.email,\n        password = user.password,\n        password2 = user.password2; // useEffect(() => {\n  //     if (isAuthenticated)  props.history.push(\"/\")\n  //     if (error === \"user already exitis\") {\n  //         alertContext.setAlert(\"User already register\");\n  //     }\n  //     clearError() \n  //     // console.log(\"error\", error)\n  // }, [error, isAuthenticated, props.history])\n\n  const onchange = e => {\n    setUser(_objectSpread({}, user, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onChangeOtp = e => {\n    setotp(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (name === \"\" || email === \"\" || password === \"\") {\n      alertContext.setAlert(\"please Enter all field\", \"danger\");\n    }\n\n    if (password !== password2) {\n      alertContext.setAlert(\"Password dose't match \", \"danger\");\n    } else {\n      registerUser({\n        name,\n        email,\n        password\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Account Register\"), React.createElement(\"div\", {\n    className: \"form_group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: onchange,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form_group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: onchange,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form_group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: onchange,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form_group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Re Password\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password2\",\n    value: password2,\n    onChange: onchange,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form_group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn edit_btn\",\n    onClick: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Register\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"otp\",\n    value: otp,\n    onChange: onChangeOtp,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => sendOtpVerify(otp),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Verify Otp\")));\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/work/client/src/component/auth/Register.js"],"names":["React","useState","useContext","useEffect","AlertContext","AuthContext","Register","props","alertContext","authContext","registerUser","error","clearError","sendOtpVerify","name","email","password","password2","user","setUser","otp","setotp","onchange","e","target","value","onChangeOtp","onSubmit","setAlert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,YAAY,GAAGN,UAAU,CAACE,YAAD,CAA/B;AACA,QAAMK,WAAW,GAAGP,UAAU,CAACG,WAAD,CAA9B;AAFwB,QAIhBK,YAJgB,GAImCD,WAJnC,CAIhBC,YAJgB;AAAA,QAIFC,KAJE,GAImCF,WAJnC,CAIFE,KAJE;AAAA,QAIKC,UAJL,GAImCH,WAJnC,CAIKG,UAJL;AAAA,QAIkBC,aAJlB,GAImCJ,WAJnC,CAIkBI,aAJlB;;AAAA,oBAMAZ,QAAQ,CAAC;AAC7Ba,IAAAA,IAAI,EAAE,EADuB;AAE7BC,IAAAA,KAAK,EAAE,EAFsB;AAG7BC,IAAAA,QAAQ,EAAE,EAHmB;AAI7BC,IAAAA,SAAS,EAAE;AAJkB,GAAD,CANR;AAAA;AAAA,QAMjBC,IANiB;AAAA,QAMXC,OANW;;AAAA,qBAaFlB,QAAQ,CAAC,EAAD,CAbN;AAAA;AAAA,QAajBmB,GAbiB;AAAA,QAaZC,MAbY;;AAAA,QAehBP,IAfgB,GAeqBI,IAfrB,CAehBJ,IAfgB;AAAA,QAeVC,KAfU,GAeqBG,IAfrB,CAeVH,KAfU;AAAA,QAeHC,QAfG,GAeqBE,IAfrB,CAeHF,QAfG;AAAA,QAeOC,SAfP,GAeqBC,IAfrB,CAeOD,SAfP,EAiBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMK,QAAQ,GAAIC,CAAD,IAAO;AACpBJ,IAAAA,OAAO,mBAAMD,IAAN;AAAY,OAACK,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC;AAAtC,OAAP;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIH,CAAD,IAAO;AACvBF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAN;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACnB,QAAIb,IAAI,KAAK,EAAT,IAAeC,KAAK,KAAK,EAAzB,IAA+BC,QAAQ,KAAK,EAAhD,EAAoD;AAChDR,MAAAA,YAAY,CAACoB,QAAb,CAAsB,wBAAtB,EAAgD,QAAhD;AACH;;AACD,QAAIZ,QAAQ,KAAKC,SAAjB,EAA4B;AACxBT,MAAAA,YAAY,CAACoB,QAAb,CAAsB,wBAAtB,EAAgD,QAAhD;AAEH,KAHD,MAGO;AACHlB,MAAAA,YAAY,CAAC;AACTI,QAAAA,IADS;AAETC,QAAAA,KAFS;AAGTC,QAAAA;AAHS,OAAD,CAAZ;AAMH;AACJ,GAfD;;AAiBA,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEF,IAAtC;AAA4C,IAAA,QAAQ,EAAEQ,QAAtD;AAAgE,IAAA,SAAS,EAAC,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,KAAK,EAAEP,KAAxC;AAA+C,IAAA,QAAQ,EAAEO,QAAzD;AAAmE,IAAA,SAAS,EAAC,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAUI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,KAAK,EAAEN,QAA9C;AAAwD,IAAA,QAAQ,EAAEM,QAAlE;AAA4E,IAAA,SAAS,EAAC,OAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,EAcI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAoC,IAAA,KAAK,EAAEL,SAA3C;AAAsD,IAAA,QAAQ,EAAEK,QAAhE;AAA0E,IAAA,SAAS,EAAC,OAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAdJ,EAkBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAEK,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAlBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAA8B,IAAA,KAAK,EAAEP,GAArC;AAA0C,IAAA,QAAQ,EAAEM,WAApD;AAAiE,IAAA,SAAS,EAAC,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMb,aAAa,CAACO,GAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAtBJ,CADJ;AA8BH,CAjFD;;AAmFA,eAAed,QAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n\r\nconst Register = (props) => {\r\n    const alertContext = useContext(AlertContext)\r\n    const authContext = useContext(AuthContext)\r\n\r\n    const { registerUser, error, clearError , sendOtpVerify} = authContext;\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    })\r\n\r\n    const [otp, setotp] = useState(\"\");\r\n\r\n    const { name, email, password, password2 } = user;\r\n\r\n    // useEffect(() => {\r\n    //     if (isAuthenticated)  props.history.push(\"/\")\r\n    //     if (error === \"user already exitis\") {\r\n    //         alertContext.setAlert(\"User already register\");\r\n    //     }\r\n    //     clearError() \r\n    //     // console.log(\"error\", error)\r\n    // }, [error, isAuthenticated, props.history])\r\n\r\n    const onchange = (e) => {\r\n        setUser({ ...user, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onChangeOtp = (e) => {\r\n        setotp(e.target.value)\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (name === \"\" || email === \"\" || password === \"\") {\r\n            alertContext.setAlert(\"please Enter all field\", \"danger\")\r\n        }\r\n        if (password !== password2) {\r\n            alertContext.setAlert(\"Password dose't match \", \"danger\")\r\n\r\n        } else {\r\n            registerUser({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h1>Account Register</h1>\r\n            <div className=\"form_group\">\r\n                <label>Name</label>\r\n                <input type=\"text\" name=\"name\" value={name} onChange={onchange} className=\"input\" />\r\n            </div>\r\n            <div className=\"form_group\">\r\n                <label>Email</label>\r\n                <input type=\"email\" name=\"email\" value={email} onChange={onchange} className=\"input\" />\r\n            </div>\r\n            <div className=\"form_group\">\r\n                <label>Password</label>\r\n                <input type=\"password\" name=\"password\" value={password} onChange={onchange} className=\"input\" />\r\n            </div>\r\n            <div className=\"form_group\">\r\n                <label>Re Password</label>\r\n                <input type=\"text\" name=\"password2\" value={password2} onChange={onchange} className=\"input\" />\r\n            </div>\r\n            <div className=\"form_group\">\r\n                <button className=\"btn edit_btn\" onClick={onSubmit}>Register</button>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"text\" name=\"otp\" value={otp} onChange={onChangeOtp} className=\"input\" />\r\n                <button onClick={() => sendOtpVerify(otp)}>Verify Otp</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}