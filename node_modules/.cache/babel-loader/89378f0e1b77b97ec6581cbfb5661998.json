{"ast":null,"code":"import _slicedToArray from \"D:\\\\work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axois from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './contactReducer';\nimport { DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, SET_ALERT, REMOVE_ALERT, ADD_CONTACT, CONTACTS_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../type';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filterd: null,\n    error: null\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // GET CONTACTS \n\n\n  const getContacts = async () => {\n    try {\n      const res = await axois.get(\"/api/contacts\");\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACTS_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // ADD CONTACTS\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axois.post(\"/api/contacts\", contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACTS_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // UPDATE CONTACT \n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axois.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACTS_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // DELETE_CONTACT\n\n\n  const deleteContact = async id => {\n    try {\n      await axois.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACTS_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // SET CURRENT CONTACT \n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // CLEAR CURRENT CONTACT \n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // FILTER CONTACT \n\n\n  const filterContact = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // CLEAR FILTER \n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      filterd: state.filterd,\n      current: state.current,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContact,\n      clearFilter,\n      error: state.error,\n      getContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["D:/work/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axois","ContactContext","ContactReducer","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ADD_CONTACT","CONTACTS_ERROR","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filterd","error","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","updateContact","put","_id","deleteContact","id","delete","setCurrent","clearCurrent","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axois from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\nimport {\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n    ADD_CONTACT,\r\n    CONTACTS_ERROR,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../type';\r\n\r\nconst ContactState = (props) => {\r\n    const initialState = {\r\n        contacts: [],\r\n        current: null,\r\n        filterd: null,\r\n        error: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n    // GET CONTACTS \r\n\r\n    const getContacts = async () => {\r\n        try {\r\n            const res = await axois.get(\"/api/contacts\")\r\n            dispatch({ type: GET_CONTACTS, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // ADD CONTACTS\r\n    const addContact = async contact => {\r\n        const config = { headers: { 'Content-Type': 'application/json' } }\r\n        try {\r\n            const res = await axois.post(\"/api/contacts\", contact, config)\r\n            dispatch({ type: ADD_CONTACT, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // UPDATE CONTACT \r\n    const updateContact = async  contact => {\r\n        const config = { headers: { 'Content-Type': 'application/json' } }\r\n        try {\r\n            const res = await axois.put(`/api/contacts/${contact._id}`, contact, config)\r\n            dispatch({ type: UPDATE_CONTACT, payload: res.data })\r\n            \r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // DELETE_CONTACT\r\n    const deleteContact = async id => {\r\n        try {\r\n            await axois.delete(`/api/contacts/${id}`)\r\n            dispatch({ type: DELETE_CONTACT, payload: id })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // SET CURRENT CONTACT \r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // CLEAR CURRENT CONTACT \r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT })\r\n    }\r\n\r\n    // FILTER CONTACT \r\n    const filterContact = text => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text })\r\n    }\r\n\r\n\r\n    // CLEAR FILTER \r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                filterd: state.filterd,\r\n                current: state.current,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContact,\r\n                clearFilter,\r\n                error: state.error,\r\n                getContacts\r\n            }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}