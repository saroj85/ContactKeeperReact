{"ast":null,"code":"import _regeneratorRuntime from\"/media/saroj/New Volume1/work/client/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/media/saroj/New Volume1/work/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axois from'axios';import ContactContext from'./contactContext';import ContactReducer from'./contactReducer';import{DELETE_CONTACT,SET_CURRENT,CLEAR_CURRENT,UPDATE_CONTACT,FILTER_CONTACTS,CLEAR_FILTER,SET_ALERT,REMOVE_ALERT,ADD_CONTACT,CONTACTS_ERROR,GET_CONTACTS,CLEAR_CONTACTS}from'../type';var ContactState=function ContactState(props){var initialState={contacts:[],current:null,filterd:null,error:null};var _useReducer=useReducer(ContactReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// GET CONTACTS \nvar getContacts=function getContacts(){var res;return _regeneratorRuntime.async(function getContacts$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(axois.get(\"/api/contacts\"));case 3:res=_context.sent;dispatch({type:GET_CONTACTS,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:CONTACTS_ERROR,payload:_context.t0.response.msg});case 10:case\"end\":return _context.stop();}}},null,null,[[0,7]]);};// ADD CONTACTS\nvar addContact=function addContact(contact){var config,res;return _regeneratorRuntime.async(function addContact$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:config={headers:{'Content-Type':'application/json'}};_context2.prev=1;_context2.next=4;return _regeneratorRuntime.awrap(axois.post(\"/api/contacts\",contact,config));case 4:res=_context2.sent;dispatch({type:ADD_CONTACT,payload:res.data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:CONTACTS_ERROR,payload:_context2.t0.response.msg});case 11:case\"end\":return _context2.stop();}}},null,null,[[1,8]]);};// UPDATE CONTACT \nvar updateContact=function updateContact(contact){var config,res;return _regeneratorRuntime.async(function updateContact$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:config={headers:{'Content-Type':'application/json'}};_context3.prev=1;_context3.next=4;return _regeneratorRuntime.awrap(axois.put(\"/api/contacts/\".concat(contact._id),contact,config));case 4:res=_context3.sent;dispatch({type:UPDATE_CONTACT,payload:res.data});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](1);dispatch({type:CONTACTS_ERROR,payload:_context3.t0.response.msg});case 11:case\"end\":return _context3.stop();}}},null,null,[[1,8]]);};// DELETE_CONTACT\nvar deleteContact=function deleteContact(id){return _regeneratorRuntime.async(function deleteContact$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return _regeneratorRuntime.awrap(axois.delete(\"/api/contacts/\".concat(id)));case 3:dispatch({type:DELETE_CONTACT,payload:id});_context4.next=9;break;case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);dispatch({type:CONTACTS_ERROR,payload:_context4.t0.response.msg});case 9:case\"end\":return _context4.stop();}}},null,null,[[0,6]]);};// SET CURRENT CONTACT \nvar setCurrent=function setCurrent(contact){dispatch({type:SET_CURRENT,payload:contact});};// CLEAR CURRENT CONTACT \nvar clearCurrent=function clearCurrent(){dispatch({type:CLEAR_CURRENT});};// FILTER CONTACT \nvar filterContact=function filterContact(text){dispatch({type:FILTER_CONTACTS,payload:text});};// CLEAR FILTER \nvar clearFilter=function clearFilter(){dispatch({type:CLEAR_FILTER});};return React.createElement(ContactContext.Provider,{value:{contacts:state.contacts,filterd:state.filterd,current:state.current,addContact:addContact,deleteContact:deleteContact,setCurrent:setCurrent,clearCurrent:clearCurrent,updateContact:updateContact,filterContact:filterContact,clearFilter:clearFilter,error:state.error,getContacts:getContacts}},props.children);};export default ContactState;","map":{"version":3,"sources":["/media/saroj/New Volume1/work/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axois","ContactContext","ContactReducer","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","ADD_CONTACT","CONTACTS_ERROR","GET_CONTACTS","CLEAR_CONTACTS","ContactState","props","initialState","contacts","current","filterd","error","state","dispatch","getContacts","get","res","type","payload","data","response","msg","addContact","contact","config","headers","post","updateContact","put","_id","deleteContact","id","delete","setCurrent","clearCurrent","filterContact","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axois from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport ContactReducer from './contactReducer';\r\nimport {\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    UPDATE_CONTACT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    SET_ALERT,\r\n    REMOVE_ALERT,\r\n    ADD_CONTACT,\r\n    CONTACTS_ERROR,\r\n    GET_CONTACTS,\r\n    CLEAR_CONTACTS\r\n} from '../type';\r\n\r\nconst ContactState = (props) => {\r\n    const initialState = {\r\n        contacts: [],\r\n        current: null,\r\n        filterd: null,\r\n        error: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\r\n    // GET CONTACTS \r\n\r\n    const getContacts = async () => {\r\n        try {\r\n            const res = await axois.get(\"/api/contacts\")\r\n            dispatch({ type: GET_CONTACTS, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // ADD CONTACTS\r\n    const addContact = async contact => {\r\n        const config = { headers: { 'Content-Type': 'application/json' } }\r\n        try {\r\n            const res = await axois.post(\"/api/contacts\", contact, config)\r\n            dispatch({ type: ADD_CONTACT, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // UPDATE CONTACT \r\n    const updateContact = async  contact => {\r\n        const config = { headers: { 'Content-Type': 'application/json' } }\r\n        try {\r\n            const res = await axois.put(`/api/contacts/${contact._id}`, contact, config)\r\n            dispatch({ type: UPDATE_CONTACT, payload: res.data })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // DELETE_CONTACT\r\n    const deleteContact = async id => {\r\n        try {\r\n            await axois.delete(`/api/contacts/${id}`)\r\n            dispatch({ type: DELETE_CONTACT, payload: id })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACTS_ERROR,\r\n                payload: err.response.msg\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    // SET CURRENT CONTACT \r\n    const setCurrent = contact => {\r\n        dispatch({ type: SET_CURRENT, payload: contact })\r\n    }\r\n\r\n\r\n\r\n    // CLEAR CURRENT CONTACT \r\n    const clearCurrent = () => {\r\n        dispatch({ type: CLEAR_CURRENT })\r\n    }\r\n\r\n    // FILTER CONTACT \r\n    const filterContact = text => {\r\n        dispatch({ type: FILTER_CONTACTS, payload: text })\r\n    }\r\n\r\n\r\n    // CLEAR FILTER \r\n    const clearFilter = () => {\r\n        dispatch({ type: CLEAR_FILTER })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                filterd: state.filterd,\r\n                current: state.current,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContact,\r\n                clearFilter,\r\n                error: state.error,\r\n                getContacts\r\n            }}>\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    )\r\n};\r\n\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}