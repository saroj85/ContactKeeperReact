{"ast":null,"code":"import _slicedToArray from \"D:\\\\work\\\\contactKeeper\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\work\\\\contactKeeper\\\\client\\\\src\\\\context\\\\auth\\\\authState.js\";\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport axois from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../type';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    error: null,\n    user: null\n  };\n\n  const _useReducer = useReducer(AuthReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Register User \n\n\n  const registerUser = async FormData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axois.post('/api/users', FormData, config);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: red.data\n      });\n    } catch (err) {}\n  }; // USER_LOADED\n  // REGISTER_SUCCESS\n  // REGISTER_FAIL\n  // AUTH_ERROR\n  // LOGIN_SUCESS\n  // LOGIN_FAIL\n  // LOGOUT\n  // CLEAR_ERRORS\n\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      error: state.error,\n      user: state.user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["D:/work/contactKeeper/client/src/context/auth/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","axois","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","user","state","dispatch","registerUser","FormData","config","headers","res","post","type","payload","red","data","err","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,YARJ,QASO,SATP;;AAeA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAMC,YAAY,GAAG;AAClBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADW;AAElBC,IAAAA,eAAe,EAAE,IAFC;AAGlBC,IAAAA,OAAO,EAAE,IAHS;AAIlBC,IAAAA,KAAK,EAAE,IAJW;AAKlBC,IAAAA,IAAI,EAAE;AALY,GAArB;;AADyB,sBASCrB,UAAU,CAACE,WAAD,EAAcY,YAAd,CATX;AAAA;AAAA,QASlBQ,KATkB;AAAA,QASXC,QATW,oBAYzB;;;AAEA,QAAMC,YAAY,GAAG,MAAMC,QAAN,IAAkB;AACnC,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAEzB,aADD;AAEL0B,QAAAA,OAAO,EAAEC,GAAG,CAACC;AAFR,OAAD,CAAR;AAKH,KAPD,CAOE,OAAOC,GAAP,EAAY,CAEb;AAEJ,GAlBD,CAdyB,CAkCzB;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;AAGA;;;AAEA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHnB,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADV;AAEHG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFpB;AAGHC,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAHZ;AAIHC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAJV;AAKHC,MAAAA,IAAI,EAAEC,KAAK,CAACD;AALT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKR,KAAK,CAACsB,QARX,CADJ;AAYH,CArED;;AA0EA,eAAevB,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport AuthContext from './authContext';\r\nimport AuthReducer from './authReducer';\r\nimport axois from 'axios';\r\n\r\n\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from '../type';\r\n\r\n\r\n\r\n\r\n\r\nconst AuthState = (props) => {\r\n    const initialState = {\r\n       token: localStorage.getItem(\"token\"),\r\n       isAuthenticated: null,\r\n       loading: true,\r\n       error: null,\r\n       user: null\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n\r\n    // Register User \r\n\r\n    const registerUser = async FormData => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axois.post('/api/users', FormData, config);\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n                payload: red.data\r\n            })\r\n            \r\n        } catch (err) {\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    // USER_LOADED\r\n\r\n\r\n    // REGISTER_SUCCESS\r\n\r\n\r\n    // REGISTER_FAIL\r\n\r\n\r\n    // AUTH_ERROR\r\n\r\n\r\n    // LOGIN_SUCESS\r\n\r\n\r\n    // LOGIN_FAIL\r\n\r\n\r\n    // LOGOUT\r\n\r\n\r\n    // CLEAR_ERRORS\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                token: state.token,\r\n                isAuthenticated: state.isAuthenticated,\r\n                loading: state.loading,\r\n                error: state.error,\r\n                user: state.user\r\n            }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    ) \r\n};\r\n\r\n\r\n\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}