{"ast":null,"code":"import _objectSpread from \"D:\\\\work\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { GET_ALL_PRODUCT, GET_PRODUCT_BY_ID, DELETE_PRODUCT, PRODUCT_ERROR, EDIT_PRODUCT } from '../type';\nexport default ((state, action) => {\n  switch (action.type) {\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, action.payload]\n      });\n\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\n        loading: false\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filterd: state.contacts.filter(contact => {\n          const Regx = new RegExp(`${action.payload}`, 'gi');\n          return contact.name.match(Regx) || contact.email.match(Regx);\n        }),\n        loading: false\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filterd: null,\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact._id !== action.payload),\n        loading: false\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case CONTACTS_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n\n  ;\n});","map":{"version":3,"sources":["D:/work/client/src/context/product/productReducer.js"],"names":["GET_ALL_PRODUCT","GET_PRODUCT_BY_ID","DELETE_PRODUCT","PRODUCT_ERROR","EDIT_PRODUCT","state","action","type","ADD_CONTACT","contacts","payload","GET_CONTACTS","loading","UPDATE_CONTACT","map","contact","_id","FILTER_CONTACTS","filterd","filter","Regx","RegExp","name","match","email","CLEAR_FILTER","DELETE_CONTACT","SET_CURRENT","current","CLEAR_CURRENT","CONTACTS_ERROR","error"],"mappings":";AAAA,SACIA,eADJ,EAEIC,iBAFJ,EAGIC,cAHJ,EAIIC,aAJJ,EAKIC,YALJ,QAMO,SANP;AAQA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKC,WAAL;AACI,+BACOH,KADP;AAEII,QAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACI,QAAV,EAAoBH,MAAM,CAACI,OAA3B;AAFd;;AAIJ,SAAKC,YAAL;AACI,+BACON,KADP;AAEII,QAAAA,QAAQ,EAAEH,MAAM,CAACI,OAFrB;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKC,cAAL;AACI,+BACOR,KADP;AAEII,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeK,GAAf,CAAmBC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBV,MAAM,CAACI,OAAP,CAAeM,GAA/B,GAAqCV,MAAM,CAACI,OAA5C,GAAsDK,OAApF,CAFd;AAGIH,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKK,eAAL;AACI,+BACOZ,KADP;AAEIa,QAAAA,OAAO,EAAEb,KAAK,CAACI,QAAN,CAAeU,MAAf,CAAsBJ,OAAO,IAAI;AACtC,gBAAMK,IAAI,GAAG,IAAIC,MAAJ,CAAY,GAAEf,MAAM,CAACI,OAAQ,EAA7B,EAAgC,IAAhC,CAAb;AACA,iBAAOK,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmBH,IAAnB,KAA4BL,OAAO,CAACS,KAAR,CAAcD,KAAd,CAAoBH,IAApB,CAAnC;AACH,SAHQ,CAFb;AAMIR,QAAAA,OAAO,EAAE;AANb;;AAQJ,SAAKa,YAAL;AACI,+BACOpB,KADP;AAEIa,QAAAA,OAAO,EAAE,IAFb;AAGIN,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKc,cAAL;AACI,+BACOrB,KADP;AAEII,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeU,MAAf,CAAsBJ,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBV,MAAM,CAACI,OAAxD,CAFd;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKe,WAAL;AACI,+BACOtB,KADP;AAEIuB,QAAAA,OAAO,EAAEtB,MAAM,CAACI;AAFpB;;AAIJ,SAAKmB,aAAL;AACI,+BACOxB,KADP;AAEIuB,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKE,cAAL;AACI,+BACOzB,KADP;AAEI0B,QAAAA,KAAK,EAAEzB,MAAM,CAACI,OAFlB;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ;AACI,aAAOP,KAAP;AAxDR;;AAyDC;AACJ,CA3DD","sourcesContent":["import {\r\n    GET_ALL_PRODUCT,\r\n    GET_PRODUCT_BY_ID,\r\n    DELETE_PRODUCT,\r\n    PRODUCT_ERROR,\r\n    EDIT_PRODUCT\r\n} from '../type';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.payload]\r\n            }\r\n        case GET_CONTACTS:\r\n            return {\r\n                ...state,\r\n                contacts: action.payload,\r\n                loading: false,\r\n            }\r\n        case UPDATE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact._id === action.payload._id ? action.payload : contact),\r\n                loading: false,\r\n            }\r\n        case FILTER_CONTACTS:\r\n            return {\r\n                ...state,\r\n                filterd: state.contacts.filter(contact => {\r\n                    const Regx = new RegExp(`${action.payload}`, 'gi');\r\n                    return contact.name.match(Regx) || contact.email.match(Regx)\r\n                }),\r\n                loading: false,\r\n            }\r\n        case CLEAR_FILTER:\r\n            return {\r\n                ...state,\r\n                filterd: null,\r\n                loading: false,\r\n            }\r\n        case DELETE_CONTACT:\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact._id !== action.payload),\r\n                loading: false,\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n        case CONTACTS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                loading: false,\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}